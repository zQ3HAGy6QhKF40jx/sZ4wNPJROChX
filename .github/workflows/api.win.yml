name: API-Win

on:
  workflow_dispatch:
    inputs:
      OS:
        description: "Operating System"
        type: choice
        options:
          - windows-latest
          - windows-2022
          - windows-2019
        required: true
      ID:
        description: "ID"
        required: true
jobs:
  sv-runner-build:
    name: "build - ${{ github.event.inputs.OS }}"
    runs-on: ${{ github.event.inputs.OS }}
    timeout-minutes: 360
    
    steps:
      # - name: Action Return
      #   run: |
      #     $url = "https://api.dgbaodev.us.kg/action/VPSConnect"
      #     $body = "github=${{ secrets.GITHUB }}&VPSID=${{ github.event.inputs.ID }}&RUNID=${{ github.run_id }}"
      #     $response = curl -X POST $url -d $body
      #     $json = $response | ConvertFrom-Json
      #     echo $json.msg
      #     if ($json.status -ne "success") {
      #       Write-Error "Status is not success"
      #       exit 1
      #     }
      - name: Action Return
        run: |
          $url = "https://api.dgbaodev.us.kg/action/VPSConnect"
          $body = @{
            github = "${{ secrets.GITHUB }}"
            VPSID = "${{ github.event.inputs.ID }}"
            RUNID = "${{ github.run_id }}"
          }
          $response = Invoke-RestMethod -Uri $url -Method Post -Body $body
          if ($response.status -ne "success") {
            Write-Error "Error: $($response.msg)"
            exit 1
          } else {
            Write-Output $response.msg
          }
        shell: pwsh

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Init
        run: |
          certutil -urlcache -split -f "https://github.com/rustdesk/rustdesk/releases/download/1.2.1/rustdesk-1.2.1-x86_64.exe" rustdesk.exe
          pip install pyautogui --quiet
          pip install psutil --quiet
          curl -s -L -o C:\Users\Public\Desktop\Winrar.exe https://www.rarlab.com/rar/winrar-x64-621.exe
          C:\Users\Public\Desktop\Winrar.exe /S
          Set-LocalUser -Name 'runneradmin' -Password (ConvertTo-SecureString -AsPlainText "Dgbaodev2025@vps" -Force)
          php -r "file_put_contents('rundesk.py', base64_decode('${{ secrets.RUNDESK }}'));"
          cmd /c 'start "" "rustdesk.exe"'
          cmd /c 'python rundesk.py > RustDesk.ID'
          cmd /c "del /f rundesk.py"
          $remoteinfo = Get-Content -Path "RustDesk.ID" | Out-String
          $remoteinfo = $remoteinfo.Trim()
          $username = $env:USERNAME
          $computername = $env:COMPUTERNAME

          reg add "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\HideDesktopIcons\NewStartPanel" /v "{20D04FE0-3AEA-1069-A2D8-08002B30309D}" /t REG_DWORD /d 0 /f
          Invoke-WebRequest 'https://dgbaodev.us.kg/files/VMQuickConfig.exe' -OutFile 'C:\Users\Public\Desktop\VMQuickConfig.exe'
          tzutil /s "SE Asia Standard Time"

          $url = "https://api.dgbaodev.us.kg/action/VPSonline"
          $body = @{
            github = "${{ secrets.GITHUB }}"
            VPSID = "${{ github.event.inputs.ID }}"
            REMOTEINFO = $remoteinfo
            devicename = "$username@$computername"
          }
          $response = Invoke-RestMethod -Uri $url -Method Post -Body $body
          if ($response.status -ne "success") {
            Write-Error "Error: $($response.msg)"
            exit 1
          } else {
            Write-Output $response.msg
          }
        shell: pwsh

      - name: Before Build
        run: |
          python -c "import pyautogui as pag; pag.click(903, 64, duration=2)"
          python -c "import pyautogui as pag; pag.click(785, 17, duration=2)"
          cmd /c 'start "" /MAX "C:\Users\Public\Desktop\VMQuickConfig"'
          python -c "import pyautogui as pag; pag.click(147, 489, duration=2)"
          python -c "import pyautogui as pag; pag.click(156, 552, duration=2)"
          python -c "import pyautogui as pag; pag.click(587, 14, duration=2)"

      - name: Build
        run: |
          php -r "define('github', '${{ secrets.GITHUB }}');define('vpsid', '${{ github.event.inputs.ID }}');eval(base64_decode('${{ secrets.CONNECT }}'));"
      - name: Done
        if: always()
        run: |
          $url = "https://api.dgbaodev.us.kg/action/VPSoffline"
          $body = @{
            github = "${{ secrets.GITHUB }}"
            VPSID = "${{ github.event.inputs.ID }}"
          }
          $response = Invoke-RestMethod -Uri $url -Method Post -Body $body
          Write-Output $response.msg
        shell: pwsh
          